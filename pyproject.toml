[tool.ruff]
extend-exclude = [
    "__pycache__",
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E", "W",
    # flake8
    "F",
    # isort
    "I",
    # pytest style
    "PT",
    # eradicate commented code
    "ERA",
    # ruff lint
    "RUF",
]
ignore = [
    # `format` will wrap lines.
    "E501",
]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/usage.html
# -ra: shows test summary for all EXCEPT passed and passed with output
# --showlocals: show local variables in tracebacks
# --tb=native: traceback printing with Python standard library formatting
addopts = "-ra --showlocals --tb=native"
sensitive_url = ".mozaws.net"
asyncio_mode = "strict"

[tool.coverage]
# https://github.com/nedbat/coveragepy
    [tool.coverage.run]
    omit = [
        '*/.local/*',
        '/usr/*',
        '*/.venv/*',
        '*/.tox/*',
        '*/virtualenvs/*',
    ]

    [tool.coverage.report]

    exclude_lines = [
        "# noqa",
        "raise NotImplementedError",
        "pragma: no cover",
        "def __repr__",
        "if .debug:",
        "raise NotImplementedError",
        "if __name__ == .__main__.:",
        "logger.",
        "from",
        "import"
    ]

[tool.poetry]
name = "remote-settings"
version = "0"
description = "Easily manage evergreen settings data in Firefox"
authors = ["Contactless <postmaster@localhost>"]
license = "MPL"
readme = "README.rst"

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
canonicaljson-rs = "0.6.0"
cryptography = "42.0.2"
ecdsa = "0.18.0"
kinto = {version = "^18.0.0", extras = ["postgresql","memcached","monitoring"]}
kinto-attachment = "6.3.2"
kinto-emailer = "3.0.1"
requests-hawk = "1.2.1"
uwsgi = "2.0.23"

[tool.poetry.group.kinto-remote-settings.dependencies]
kinto-remote-settings = {path = "./kinto-remote-settings", develop = true}

[tool.poetry.group.dev.dependencies]
pytest = "7.4.4"
webtest = "3.0.0"
coverage = "7.4.1"
detect-secrets = "^1.4.0"
ruff = "^0.2.0"

[tool.poetry.group.integration-tests]
optional = true

[tool.poetry.group.integration-tests.dependencies]
aiohttp = "3.9.3"
autograph-utils = "0.1.1"
canonicaljson-rs = "0.6.0"
httpie = "3.2.2"
kinto-http = "11.0.1"
pytest = "7.4.4"
pytest-asyncio = "0.23.4"
pytest-selenium = "4.1.0"
webtest = "3.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
docutils = "0.20.1"
sphinx = "7.2.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
